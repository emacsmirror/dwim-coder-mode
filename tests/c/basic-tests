‖ input ‖ output ‖ output with auto-space ‖
‖ ‖_❚‖_❚‖
‖. ‖_❚‖_❚‖
‖  ‖__❚‖__❚‖
‖,‖#❚‖#❚‖

‖i ‖i_❚‖i_❚‖
‖i .‖i ❚‖i ❚‖
‖func ..‖func_ (❚)‖func_ (❚)‖
‖i,‖i,❚‖
‖i,,‖i=❚‖
‖i, ,‖i=❚‖
‖i,,,‖i==❚‖
‖i,,,,‖i==,❚‖

‖env'‖ENV❚‖ENV❚‖
‖true'‖TRUE❚‖TRUE❚‖
‖TRUE'‖True❚‖True❚‖
‖false'‖FALSE❚‖FALSE❚‖
‖FALSE'‖False❚‖False❚‖
‖null'‖NULL❚‖NULL❚‖
‖NULL'‖Null❚‖Null❚‖
‖return'‖RETURN❚‖RETURN❚‖

‖i+,‖i+=❚‖
‖i-,‖i-=❚‖
‖i*,‖i*=❚‖
‖i/,‖i/=❚‖
‖i%,‖i%=❚‖

‖i<,‖i<=❚‖
‖i>,‖i>=❚‖
‖i!,‖i!=❚‖

‖i,❪,❫ =‖i=❚=‖
‖i❪>❫ >‖i>❚>‖
‖i❪&❫ &‖i&❚&‖

‖n items‖n_items❚‖n_items❚‖
‖type t var‖type_t var❚‖type_t var❚‖
goto some label‖goto some_label❚‖goto some_label❚‖

‖,include,‖#include <❚>‖#include <❚>‖
‖,include,,‖#include "❚"‖#include "❚"‖
‖,include,,,‖#include <❚>‖#include <❚>‖
‖#include <conf❪;❫ig.h>‖#include <config.h>❚‖#include <config.h>❚‖
‖#include "conf❪;❫ig.h"‖#include "config.h"❚‖#include "config.h"❚‖
‖#include <conf❪,❫ig.h>‖#include "conf❚ig.h"‖#include "conf❚ig.h"‖
‖#include "conf❪,❫ig.h"‖#include <conf❚ig.h>‖#include <conf❚ig.h>‖
‖#include "main❪ ❫config.h"‖#include "main-❚config.h"‖
‖#include "main-❪ ❫config.h"‖#include "main_❚config.h"‖

‖char argv[❪[❫]‖char argv[][❚]‖
‖char a[,‖char a[],❚‖
‖char c = ❪'❫‖char c = '❚'‖char c = '❚'‖
‖char c=';;‖char c=';'❚‖
‖char c=',,‖char c=',',❚‖

‖int ‖int ❚‖int ❚‖
‖int❪"❫‖int *❚‖int *❚‖
‖guint❪"❫‖guint *❚‖guint *❚‖
‖guint,‖guint,❚‖
‖int main(const guint❪"❫)‖int main(const guint *❚)‖int main(const guint *❚)‖
‖int main(const guint❪"❫)‖int main(const guint *❚)‖int main(const guint *❚)‖
‖int main(const guint❪"❫)‖int main(const guint *❚)‖int main(const guint *❚)‖

‖(&‖(&❚)‖(&❚)‖
‖f (.❪ ❫)‖f (_❚)‖f (_❚)‖
‖f (❪ ❫)‖f (_❚)‖f (_❚)‖
‖f (&.❪ ❫)‖f (&_❚)‖f (&_❚)‖
‖f (&❪ ❫)‖f (&_❚)‖f (&_❚)‖
‖f (&❪,❫)‖f (*❚)‖f (*❚)‖
‖f (*❪ ❫)‖f (*_❚)‖f (*_❚)‖
‖f (-❪ ❫)‖f (-_❚)‖f (-_❚)‖
‖f (!❪ ❫)‖f (!_❚)‖f (!_❚)‖
‖f (*❪,❫)‖f (&❚)‖f (&❚)‖
‖f (❪,❫*)‖f (*❚)‖f (*❚)‖
‖f (❪,❫&)‖f (&❚)‖f (&❚)‖
‖f (*.❪ ❫)‖f (*_❚)‖f (*_❚)‖
‖f (arg, .❪ ❫)‖f (arg, _❚)‖f (arg, _❚)‖
‖f (arg,.❪ ❫)‖f (arg,_❚)‖f (arg,_❚)‖
‖f (arg, ❪&❫)‖f (arg, &❚)‖f (arg, &❚)‖
‖f (arg, ❪*❫)‖f (arg, *❚)‖f (arg, *❚)‖
‖f (arg, &❪ ❫)‖f (arg, &_❚)‖f (arg, &_❚)‖
‖f (arg, *❪ ❫)‖f (arg, *_❚)‖f (arg, *_❚)‖
‖f (arg, -❪ ❫)‖f (arg, -_❚)‖f (arg, -_❚)‖
‖f (❪;❫) + g ()‖f ()❚ + g ()‖f ()❚ + g ()‖

‖"Hello World❪,❫"‖"Hello World,❚"‖
‖"Hello, ❪ ❫World"‖"Hello,  ❚World"‖"Hello,  ❚World"‖
‖s,❪,❫"Hello"‖s=❚"Hello"‖

‖g_uri_flags'_none'‖G_URI_FLAGS_NONE❚‖G_URI_FLAGS_NONE❚‖
‖int     ❪ ❫ age‖int      ❚ age‖int      ❚ age‖
‖int ❪ ❫age‖int _❚age‖int _❚age‖
‖func(❪,❫)‖func(&❚)‖
‖char *s = "Hello world❪,❫"‖char *s = "Hello world,❚"‖
‖func(❪..❫)‖func((❚))‖func((❚))‖
‖func(‖func (❚)‖func (❚)‖
‖s = "He❪;❫llo"‖s = "Hello"❚‖s = "Hello"❚‖
‖s = "Hello"❪;❫‖s = "Hello";❚‖s = "Hello";❚‖
‖void main{f❪  ❫}‖void main{f->❚}‖void main{f->❚}‖
‖void main{f❪   ❫}‖void main{f__❚}‖void main{f__❚}‖

‖for(❪;❫)‖for(;❚)‖for(;❚)‖
‖for(;❪;❫)‖for(;;❚)‖for(;;❚)‖
‖for(;;❪;❫)‖for(;;)❚‖for(;;)❚‖
‖for(❪;❫;)‖for(;❚;)‖for(;❚;)‖
‖i++❪;❫‖i++;❚‖i++;❚‖
‖i--❪;❫‖i--;❚‖i--;❚‖
‖f(i--❪;❫)‖f(i--)❚‖
‖f(i++❪;❫)‖f(i++)❚‖
‖❪;❫i--;‖i--❚;‖i--❚;‖
‖i--❪;❫;‖i--;❚‖i--;❚‖

‖int❪"❫‖int *❚‖int *❚‖
‖a()❪  ❫‖a()->❚‖
‖some_random_t"‖some_random_t *❚‖
‖some_t❪"❫‖some_t *❚‖some_t *❚‖
‖'❪;❫'‖';❚'‖
‖';❪;❫'‖';'❚‖
‖notify->use_underline.,‖"notify::use-underline",❚‖

‖case PROP_HELLO❪;❫‖case PROP_HELLO:❚‖
‖default❪;❫‖default:❚‖

‖int *a, ❪.❫‖int *a, .❚‖
‖int *a, ❪.❫b‖int *a, *❚b‖
‖call(❪.apple❫)‖call(&apple❚)‖
‖call(❪.23❫)‖call(.23❚)‖
‖call(a, ❪.b❫)‖call(a, &b❚)‖
‖a = {❪.name❫}‖a = {.name❚}‖
